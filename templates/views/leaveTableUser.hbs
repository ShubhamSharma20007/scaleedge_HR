<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.2.0/fonts/remixicon.css" rel="stylesheet" />
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">
    <link rel="stylesheet" href="https://unpkg.com/sweetalert/dist/sweetalert.css">
    <script src="js/app.js"></script>
    <link href="stylesheets/app.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/apexcharts">
    </link>
</head>

<body>
    {{>dashboardNav}}
    <div class="container-scroller">
        <div class="container-fluid page-body-wrapper">
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="page-header">

                        <h3 class="page-title d-flex align-items-center">
                            <span
                                class="page-title-icon bg-gradient-primary rounded-circle text-white me-2 position-relative"
                                style="width: 50px;height:50px;scale:0.8">
                                <button class="button2 position-absolute start-0 top-0" onclick="goBack()">
                                    <div class="button-box">
                                        <span class="button-elem">
                                            <svg viewBox="0 0 46 40" xmlns="http://www.w3.org/2000/svg">
                                                <path
                                                    d="M46 20.038c0-.7-.3-1.5-.8-2.1l-16-17c-1.1-1-3.2-1.4-4.4-.3-1.2 1.1-1.2 3.3 0 4.4l11.3 11.9H3c-1.7 0-3 1.3-3 3s1.3 3 3 3h33.1l-11.3 11.9c-1 1-1.2 3.3 0 4.4 1.2 1.1 3.3.8 4.4-.3l16-17c.5-.5.8-1.1.8-1.9z">
                                                </path>
                                            </svg>
                                        </span>
                                        <span class="button-elem">
                                            <svg viewBox="0 0 46 40">
                                                <path
                                                    d="M46 20.038c0-.7-.3-1.5-.8-2.1l-16-17c-1.1-1-3.2-1.4-4.4-.3-1.2 1.1-1.2 3.3 0 4.4l11.3 11.9H3c-1.7 0-3 1.3-3 3s1.3 3 3 3h33.1l-11.3 11.9c-1 1-1.2 3.3 0 4.4 1.2 1.1 3.3.8 4.4-.3l16-17c.5-.5.8-1.1.8-1.9z">
                                                </path>
                                            </svg>
                                        </span>
                                    </div>
                                </button>
                                {{!-- <i class="mdi mdi-arrow-left" onclick="goBack()" title="Back"></i> --}}
                                <script>
                                    function goBack() {
                                        window.history.back();
                                    }
                                </script>
                            </span> Leave List
                        </h3>
                        <nav aria-label="breadcrumb">
                            <ul class="breadcrumb">



                                <a title="CSV" href="" id="downloadExcel"><button class="Btn">
                                        <svg class="svgIcon" viewBox="0 0 384 512" height="1em"
                                            xmlns="http://www.w3.org/2000/svg">
                                            <path
                                                d="M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z">
                                            </path>
                                        </svg>
                                        <span class="icon2"></span>
                                        <span class="tooltip" data-placement="bottom">Download</span>
                                    </button></a>
                            </ul>
                        </nav>

                    </div>

                    <div class="row">
                        <div class="col-md-12 grid-margin stretch-card">
                            <div class="card">
                                <div class="card-body overflow-auto">
                                    <div class="row">
                                        {{!-- <div class="col-md-6">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-form-label">Select Month and Year</label>
                                                <div class="col-sm-9">
                                                    <input type="month" class="form-control" id="calendarInput"
                                                        onchange="filterData()" name="month" />
                                                </div>
                                            </div>
                                        </div> --}}


                                        <div class="col-header col-md-5 col-12 p-0">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-md-12 col-form-label fw-bold">Select
                                                    Month and
                                                    Year</label>
                                                <div class="col-12 col-md-12">
                                                    <input type="month" class="form-control" id="calendarInput"
                                                        onchange="filterData()" name="month" />
                                                </div>
                                            </div>
                                        </div>



                                        <div class="col-md-5 col-header col-12 p-0">
                                            <div class="form-group row align-items-center">
                                                <label class=" col-form-label col-md-12  fw-bold">Filter by
                                                    Status</label>
                                                <div class="col-12 col-md-12">
                                                    <select id="statusFilter" class="form-select"
                                                        style="height: 45px;border:none">
                                                        <option value="all">All</option>
                                                        <option value="Approve">Approve</option>
                                                        <option value="Reject">Reject</option>
                                                        <option value="pending">Pending</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        {{!-- <div class="col-md-6">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-form-label">Start Date</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="date" id="startDate"
                                                        onchange="filterData1()" />
                                                </div>
                                            </div>
                                        </div> --}}


                                        <div class="col-header col-md-5 col-12 p-0">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-md-12 col-form-label fw-bold">Start
                                                    Date</label>
                                                <div class="col-12 col-md-12">
                                                    <input class="form-control" type="date" id="startDate"
                                                        onchange="filterData1()" />
                                                </div>
                                            </div>
                                        </div>


                                        {{!-- <div class="col-md-6">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-form-label">End Date</label>
                                                <div class="col-sm-9">
                                                    <input class="form-control" type="date" id="endDate"
                                                        onchange="filterData1()" />
                                                </div>
                                            </div>
                                        </div> --}}



                                        <div class="col-header col-md-5 col-12 p-0">
                                            <div class="form-group row">
                                                <label class="col-sm-3 col-md-12 col-form-label fw-bold">End
                                                    Date</label>
                                                <div class="col-12 col-md-12">
                                                    <input type="date" class="form-control" id="endDate"
                                                        onchange="filterData1()" />
                                                </div>
                                            </div>
                                        </div>


                                    </div>

                                    <div class="table-wrapper">

                                        <table id="userDataTable" class="table table-striped">
                                            <thead>
                                                <tr>
                                                    {{!-- <th scope="col">ID</th> --}}
                                                    <th scope="col">User</th>
                                                    <th scope="col">Leave Start Date</th>
                                                    <th scope="col">Leave Date</th>
                                                    <th scope="col">Days</th>
                                                    <th scope="col">Remarks</th>
                                                    <th scope="col">Leave Type</th>
                                                    <th scope="col">Status</th>
                                                    <th hidden scope="col" class="text-center">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                {{#each leaveData}}
                                                <tr>
                                                    <td>{{capitalizeFirst userpk}}</td>
                                                    <td>{{capitalizeFirst from_date}}</td>
                                                    <td>{{capitalizeFirst to_date}}</td>
                                                    <td>{{capitalizeFirst days}}</td>
                                                    <td>{{capitalizeFirst remarks}}</td>
                                                    <td>{{capitalizeFirst leave_type}}</td>
                                                    <td>{{capitalizeFirst approve_b}}</td>
                                                    <td hidden class="text-center">
                                                        <a href="/leaveApproval/{{ id }}"
                                                            class="btn btn-success">Action</a>

                                                    </td>
                                                </tr>
                                                {{/each}}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
      {{>phoneNav}}

  {{>loanApply}}
  {{>applyArrears}}
  {{>reimburshment}}
  {{>attendanceMeeting}}
  {{>attendanceMeetingOut}}
  {{>offerletter}}
  {{>appointment}}
  {{>confirmationLetter}}
  {{>termination}}

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
</body>

</html>
<style>
    .button {
        font-family: inherit;
        font-size: 12px;
        background: #B66DFF;
        color: white;
        padding: 0.7em 1em;
        padding-left: 0.9em;
        display: flex;
        align-items: center;
        border: none;
        border-radius: 5px;
        overflow: hidden;
        transition: all 0.2s;
        cursor: pointer;
    }

    .button span {
        display: block;
        margin-left: 0.3em;
        transition: all 0.3s ease-in-out;
    }

    .button svg {
        display: block;
        transform-origin: center center;
        transition: transform 0.3s ease-in-out;
    }

    .button:hover .svg-wrapper {
        animation: fly-1 0.6s ease-in-out infinite alternate;
    }

    .button:hover svg {
        transform: translateX(1.2em) rotate(45deg) scale(1.1);
    }

    .button:hover span {
        transform: translateX(8em);
    }

    .button:active {
        transform: scale(0.95);
    }

    @keyframes fly-1 {
        from {
            transform: translateY(0.1em);
        }

        to {
            transform: translateY(-0.1em);
        }
    }

    .button2 {
        display: block;
        position: relative;
        width: 50px;
        height: 50px;
        margin: 0;
        overflow: hidden;
        outline: none;
        background-color: transparent;
        cursor: pointer;
        border: 0;
    }

    .button2:before,
    .button2:after {
        content: "";
        position: absolute;
        border-radius: 50%;
        inset: 7px;
    }

    .button2:before {
        border: 4px solid #f0eeef;
        transition: opacity 0.4s cubic-bezier(0.77, 0, 0.175, 1) 80ms,
            transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) 80ms;
    }

    .button2:after {
        border: 4px solid #96daf0;
        transform: scale(1.3);
        transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1),
            transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        opacity: 0;
    }

    .button2:hover:before,
    .button2:focus:before {
        opacity: 0;
        transform: scale(0.7);
        transition: opacity 0.4s cubic-bezier(0.165, 0.84, 0.44, 1),
            transform 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    .button2:hover:after,
    .button2:focus:after {
        opacity: 1;
        transform: scale(1);
        transition: opacity 0.4s cubic-bezier(0.77, 0, 0.175, 1) 80ms,
            transform 0.5s cubic-bezier(0.455, 0.03, 0.515, 0.955) 80ms;
    }

    .button-box {
        display: flex;
        position: absolute;
        top: 0;
        left: 0;
    }

    .button-elem {
        display: block;
        width: 20px;
        height: 20px;
        margin: 17px 18px 0 18px;
        transform: rotate(180deg);
        fill: #f0eeef;
    }

    .button2:hover .button-box,
    .button2:focus .button-box {
        transition: 0.4s;
        transform: translateX(-56px);
    }

    .Btn {
        width: 40px;
        height: 40px;
        border: none;
        border-radius: 50%;
        background-color: rgb(27, 27, 27);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        position: relative;
        transition-duration: .3s;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.11);
    }

    .svgIcon {
        fill: rgb(214, 178, 255);
    }

    .icon2 {
        width: 18px;
        height: 5px;
        border-bottom: 2px solid rgb(182, 143, 255);
        border-left: 2px solid rgb(182, 143, 255);
        border-right: 2px solid rgb(182, 143, 255);
    }

    .tooltip {
        position: absolute;
        right: -105px;
        opacity: 0;
        background-color: rgb(12, 12, 12);
        color: white;
        padding: 5px 10px;
        border-radius: 5px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition-duration: .2s;
        pointer-events: none;
        letter-spacing: 0.5px;
    }

    .tooltip::before {
        position: absolute;
        content: "";
        width: 10px;
        height: 10px;
        background-color: rgb(12, 12, 12);
        background-size: 1000%;
        background-position: center;
        transform: rotate(45deg);
        left: -5%;
        transition-duration: .3s;
    }

    .Btn:hover .tooltip {
        opacity: 1;
        transition-duration: .3s;
    }

    .Btn:hover {
        background-color: rgb(150, 94, 255);
        transition-duration: .3s;
    }

    .Btn:hover .icon2 {
        border-bottom: 2px solid rgb(235, 235, 235);
        border-left: 2px solid rgb(235, 235, 235);
        border-right: 2px solid rgb(235, 235, 235);
    }

    .Btn:hover .svgIcon {
        fill: rgb(255, 255, 255);
        animation: slide-in-top 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
    }

    @keyframes slide-in-top {
        0% {
            transform: translateY(-10px);
            opacity: 0;
        }

        100% {
            transform: translateY(0px);
            opacity: 1;
        }
    }

    .card {
        position: relative;
        /* background: linear-gradient(to right, rgb(255 255 255 / 42%) 0%, rgb(255 255 255 / 34%) 100%) !important;
   https://img.freepik.com/free-vector/blank-blue-leafy-poster_53876-99945.jpg?w=996&t=st=1713779826~exp=1713780426~hmac=02ccc3bf0f2d2afa41ceaf4dabde928b5c6b2b2156de2de83dcdbe64d81d26d8
     */
        background: url(https://img.freepik.com/free-vector/blank-blue-leafy-poster_53876-99945.jpg?w=996&t=st=1713779826~exp=1713780426~hmac=02ccc3bf0f2d2afa41ceaf4dabde928b5c6b2b2156de2de83dcdbe64d81d26d8);
        background-repeat: no-repeat;
        background-position: bottom;
        background-size: cover;
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    }

    .form-group {
        margin: 0;
    }

    .card-body .row:nth-child(2) {
        margin-bottom: 2vw;
    }


    @media screen and (max-width:767px) {
        .content-wrapper {
            padding: 5vw;
        }

        .card-body .row:nth-child(2) {
            margin-bottom: 8vw;
        }


        .button {
            font-size: 3vw;
            padding: 2vw;
        }

        .svg-wrapper svg {
            width: 5vw;
        }

        .card-body {
            padding: 5vw !important;
        }

        .form-group {
            margin-bottom: 0
        }

        .table-responsive {
            margin-top: 1.5rem;
        }

        .breadcrumbone {
            padding: 0;
        }

        .card {
            margin-top: 5vw;
        }

        .main-panel {
            padding: 5vw;
        }
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchInput");
        const userDataTable = document.getElementById("userDataTable");
        const tableRows = userDataTable.querySelectorAll("tbody tr");

        searchInput.addEventListener("input", function () {
            const searchValue = searchInput.value.trim().toLowerCase();

            tableRows.forEach((row) => {
                const username = row.querySelector("td:first-child").textContent.toLowerCase();

                if (username.includes(searchValue)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });
    });



    document.addEventListener('DOMContentLoaded', function () {
        const tableRows = document.querySelectorAll('#userDataTable tbody tr');

        tableRows.forEach(row => {
            const cells = row.cells;

            for (let i = 0; i < cells.length - 1; i++) {
                if (cells[i].textContent.trim() === '') {
                    cells[i].textContent = 'Pending';
                }
            }

            const toDateCell = row.querySelector('td:nth-child(3)');
            const toDate = new Date(toDateCell.textContent.trim());
            const currentDate = new Date();

            const approvalCell = row.querySelector('td:nth-child(7)');
            const approvalStatus = approvalCell.textContent.trim().toLowerCase();

            if (toDate < currentDate) {
                const approveButton = row.querySelector('td:nth-child(8) a');
                approveButton.style.display = 'none';
            }

            if (approvalStatus === 'y') {
                approvalCell.textContent = 'Approve';
            } else if (approvalStatus === 'n') {
                approvalCell.textContent = 'Reject';
            }
        });

        const statusFilter = document.getElementById('statusFilter');

        statusFilter.addEventListener('change', () => {
            const selectedStatus = statusFilter.value;

            tableRows.forEach(row => {
                const statusCell = row.querySelector('td:nth-child(7)');
                const approvalStatus = statusCell.textContent.trim().toLowerCase();

                if (selectedStatus === 'all') {
                    row.style.display = 'table-row';
                } else if (selectedStatus === 'pending') {
                    if (approvalStatus.includes('pending')) {
                        row.style.display = 'table-row';
                    } else {
                        row.style.display = 'none';
                    }
                } else if (approvalStatus === selectedStatus.toLowerCase()) {
                    row.style.display = 'table-row';
                } else {
                    row.style.display = 'none';
                }
            });
        });
    });
</script>

<script>
    function searchTable() {
        // Get the search input value
        var input = document.getElementById("searchInput");
        var filter = input.value.toLowerCase();

        // Get the table and table rows
        var table = document.getElementById("userDataTable");
        var rows = table.getElementsByTagName("tr");

        for (var i = 0; i < rows.length; i++) {
            var row = rows[i];
            var cells = row.getElementsByTagName("td");
            var rowText = "";

            for (var j = 0; j < cells.length; j++) {
                rowText += cells[j].textContent.toLowerCase();
            }

            if (rowText.includes(filter)) {
                row.style.display = "";
            } else {
                row.style.display = "none";
            }
        }
    }

</script>

<script>
    function setCurrentMonthAndDate() {
        const currentDate = new Date();
        const year = currentDate.getFullYear();
        const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');

        const firstDay = new Date(year, currentDate.getMonth(), 1);
        const firstDayFormatted = `${year}-${month}-01`;

        const lastDay = new Date(year, currentDate.getMonth() + 1, 0);
        const lastDayFormatted = `${year}-${month}-${lastDay.getDate().toString().padStart(2, '0')}`;

        const currentMonthYear = `${year}-${month}`;
        document.getElementById('calendarInput').value = currentMonthYear;
        document.getElementById('startDate').value = firstDayFormatted;
        document.getElementById('endDate').value = lastDayFormatted;

        filterData1();
        filterData2(); // Call the updated filterData2
    }

    window.onload = function () {
        setCurrentMonthAndDate();
        filterData2(); // Call the updated filterData2 on page load
    };

    document.getElementById('calendarInput').addEventListener('change', function () {
        const selectedDate = new Date(this.value);
        const year = selectedDate.getFullYear();
        const month = (selectedDate.getMonth() + 1).toString().padStart(2, '0');
        const firstDay = new Date(year, selectedDate.getMonth(), 1);
        const firstDayFormatted = `${year}-${month}-01`;
        const lastDay = new Date(year, selectedDate.getMonth() + 1, 0);
        const lastDayFormatted = `${year}-${month}-${lastDay.getDate().toString().padStart(2, '0')}`;

        document.getElementById('startDate').value = firstDayFormatted;
        document.getElementById('endDate').value = lastDayFormatted;
        filterData1();
        filterData2(); // Call the updated filterData2 when the calendar input changes
    });

    function filterData1() {
        const startDateString = document.getElementById('startDate').value;
        const endDateString = document.getElementById('endDate').value;

        const startDate = new Date(startDateString);
        const endDate = new Date(endDateString);

        const rows = document.querySelectorAll('#userDataTable tbody tr');

        rows.forEach(row => {
            const dateCell = row.cells[2].textContent;
            const rowDate = new Date(dateCell);

            if (rowDate >= startDate && rowDate <= endDate) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function filterData2() {
        const selectedUserName = document.getElementById('user_name').value;
        const selectedMonthYear = document.getElementById('calendarInput').value;

        const rows = document.querySelectorAll('#userDataTable tbody tr');

        rows.forEach(row => {
            const userName = row.cells[0].textContent; // Change the index to 0 for the user cell
            const dateCell = row.cells[1].textContent; // Change the index to 1 for the date cell

            if (
                (selectedUserName === "" || userName === selectedUserName) &&
                (selectedMonthYear === "" || dateCell.startsWith(selectedMonthYear))
            ) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        });
    }

</script>

<script>
    document.getElementById('downloadExcel').addEventListener('click', function () {
        const table = document.getElementById('userDataTable');
        const rows = table.querySelectorAll('tbody tr');
        const filteredData = [];

        rows.forEach(row => {
            const rowData = Array.from(row.cells).map(cell => cell.textContent);
            filteredData.push(rowData);
        });

        const wb = XLSX.utils.book_new();
        const ws = XLSX.utils.aoa_to_sheet([['User', 'From Date', 'To Date', 'Days', 'Remarks', 'Leave Type', 'Status'], ...filteredData]);
        XLSX.utils.book_append_sheet(wb, ws, 'Report');

        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });

        const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

        const fileName = 'report.xlsx'; // You can customize the file name here.
        if (window.navigator.msSaveOrOpenBlob) {
            // For IE/Edge browsers
            window.navigator.msSaveOrOpenBlob(blob, fileName);
        } else {
            const downloadLink = document.createElement('a');
            downloadLink.href = URL.createObjectURL(blob);
            downloadLink.download = fileName;
            downloadLink.click();
        }
    });
</script>