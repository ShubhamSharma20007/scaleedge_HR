<!DOCTYPE html>
<html>

<head>
  <title>ScaleEdge</title>
  <link rel="stylesheet" href="/assets/vendors/mdi/css/materialdesignicons.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <link rel="stylesheet" href="/assets/vendors/css/vendor.bundle.base.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://unpkg.com/sweetalert/dist/sweetalert.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
  <link rel="stylesheet" href="/assets/css/style.css">
  <link rel="shortcut icon" href="/assets/images/favicon.ico" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.8/xlsx.full.min.js"></script>


</head>

<body>
  <div class="container-scroller">
    {{>topbar}}
    <div class="container-fluid page-body-wrapper">
      {{> sidebar}}
      <div class="main-panel">
        <div class="content-wrapper">
          <div class="page-header">
            <h3 class="page-title">
              <span class="page-title-icon bg-gradient-primary text-white me-2">
                <i class="mdi mdi-arrow-left" onclick="goBack()" title="Back"></i>
                <script>
                  function goBack() {
                    window.history.back();
                  }
                </script>
              </span> Report
            </h3>
            <nav aria-label="breadcrumb">
              <ul class="breadcrumb">
                <a href="" id="downloadExcel"><i style="font-size: 30px;" class="fa-solid fa-file-csv"></i></a>
              </ul>
            </nav>
          </div>
          {{!-- <form id="dataForm" class="form-sample" action="/reportMonthYearWise" method="post"
            style="margin-left: 21vh;">
            <div class="row">
              <div class="col-md-4">
                <div class="form-group row">
                  <label class="col-sm-3 col-form-label">Month</label>
                  <div class="col-sm-9">
                    <select name="month" id="selectedMonth" class="form-select">
                      <option value="">Month</option>
                      <option value="1">Jan</option>
                      <option value="2">Feb</option>
                      <option value="3">Mar</option>
                      <option value="4">Apr</option>
                      <option value="5">May</option>
                      <option value="6">Jun</option>
                      <option value="7">Jul</option>
                      <option value="8">Aug</option>
                      <option value="9">Sep</option>
                      <option value="10">Oct</option>
                      <option value="11">Nov</option>
                      <option value="12">Dec</option>
                    </select>
                  </div>
                </div>
              </div>
              <div class="col-md-4">
                <div class="form-group row">
                  <label class="col-sm-3 col-form-label">Year</label>
                  <div class="col-sm-9">
                    <input class="form-control" type="number" id="selectedYear" name="year" min="2000" max="2099"
                      required>
                  </div>
                </div>
              </div>
              <div class="col-md-4">
                <button type="submit" class="btn btn-primary" style="margin-bottom: 20px;">Generate
                  Report</button>
              </div>
            </div>

          </form> --}}
          <div class="row justify-content-center">
            <div class="col-12">
              <div class="card">
                <div class="card-body">
                  <div class="row justify-content-center">
                    <div class="form-sample">
                      <div class="row">
                        <div class="col-md-6">
                          <form id="dataForm" class="form-sample" action="/reportMonthYearWise" method="post">
                            <div class="form-group row">
                              <label class="col-sm-3 col-form-label">Select Month and Year</label>
                              <div class="col-sm-9">
                                <input type="month" class="form-control" id="calendarInput" onchange="submitForm()"
                                  name="month" />
                                <input type="hidden" name="selectedMonth" id="selectedMonth">
                                <input type="hidden" name="selectedYear" id="selectedYear">
                              </div>
                            </div>
                          </form>
                        </div>
                        <div class="col-md-6">
                          <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Select User</label>
                            <div class="col-sm-9">
                              <select class="form-select" id="user_name" name="user_name" onchange="filterData2()">
                                <option value=""> All Users </option>
                                {{#each users}}
                                <option value="{{user_name}}">{{user_name}}</option>
                                {{/each}}
                              </select>
                            </div>

                          </div>
                        </div>
                      </div>
                      {{!-- <div class="row">
                        <div class="col-md-6">
                          <div class="form-group row">
                            <label class="col-sm-3 col-form-label">Start Date</label>
                            <div class="col-sm-9">
                              <input class="form-control" type="date" id="startDate" onchange="filterData1()" />
                            </div>
                          </div>
                        </div>
                        <div class="col-md-6">
                          <div class="form-group row">
                            <label class="col-sm-3 col-form-label">End Date</label>
                            <div class="col-sm-9">
                              <input class="form-control" type="date" id="endDate" onchange="filterData1()" />
                            </div>
                          </div>
                        </div>
                      </div> --}}
                      <div class="table-responsive" style="overflow-y: auto; max-height: 400px;">
                        <table id="userTable" class="table table-bordered">
                          <thead style="position: sticky; top: 0; background-color: white;">
                            <tr>
                              <th scope="col">Name</th>
                              <th style="display: none;">E-mail</th>
                              <th scope="col">Date</th>
                              <th scope="col">In Time</th>
                              <th scope="col">Out Time</th>
                              <th scope="col">Working Hours</th>
                              <th scope="col">Attendance</th>
                              <th scope="col">Status</th>
                            </tr>
                          </thead>
                          <tbody id="userTableBody">
                            {{#each rows}}
                            <tr>
                              <td scope="row">{{this.user_name}}</td>
                              <td style="display:none">{{this.email}}</td>
                              <td>{{this.date_column}}</td>
                              <td>{{this.time_in}}</td>
                              <td>{{this.time_out}}</td>
                              <td>{{this.hours_worked}}</td>
                              <td>{{this.attendance_mark}}</td>
                              <td>
                                <a href="/distance?user_name={{this.user_name}}&date={{this.date_column}}">
                                  <span class="flag" style="display: inline-block; width: 16px; height: 16px;">
                                    <i class="fa-solid fa-flag"></i>
                                  </span>
                                </a>
                                <a href="" hidden>{{this.range_status }}</a>
                              </td>
                            </tr>
                            {{/each}}
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>


    <script src="assets/vendors/js/vendor.bundle.base.js"></script>
    <script src="assets/vendors/chart.js/Chart.min.js"></script>
    <script src="assets/js/off-canvas.js"></script>
    <script src="assets/js/hoverable-collapse.js"></script>
    <script src="assets/js/misc.js"></script>
    <script src="assets/js/dashboard.js"></script>
    <script src="assets/js/todolist.js"></script>
    <script src="/assets/js/jquery-2.1.1.min.js"></script>
</body>

</html>




{{!--
<script>
  function filterData() {
    var input = document.getElementById("searchInput");
    var filter = input.value.toUpperCase();
    var calendarInput = document.getElementById("calendarInput");
    var selectedMonth = calendarInput.value;

    // Extract year and month from the selectedMonth (YYYY-MM)
    var selectedYear = selectedMonth.split("-")[0];

    // Update the hidden input field with the selected year
    document.getElementById("selectedYear").value = selectedYear;

    var table = document.getElementById("userTable");
    var tbody = table.getElementsByTagName("tbody")[0];
    var rows = tbody.getElementsByTagName("tr");

    for (var i = 0; i < rows.length; i++) {
      var tdName = rows[i].getElementsByTagName("td")[0];
      var tdDate = rows[i].getElementsByTagName("td")[2];

      if (tdName && tdDate) {
        var nameText = tdName.textContent || tdName.innerText;
        var dateText = tdDate.textContent || tdDate.innerText;

        var userDate = new Date(dateText);

        // Compare the selected month with the user's date
        if (nameText.toUpperCase().indexOf(filter) > -1 && isSameMonth(userDate, selectedMonth)) {
          rows[i].style.display = "";
        } else {
          rows[i].style.display = "none";
        }
      }
    }
  }

  function isSameMonth(date, selectedMonth) {
    // Extract the month part from the selectedMonth (YYYY-MM) and compare it with the user's date
    var userMonth = (date.getFullYear() + '-' + (date.getMonth() + 1).toString().padStart(2, '0'));
    return userMonth === selectedMonth;
  }

  document.getElementById("searchInput").addEventListener("input", filterData);
  filterData();
</script> --}}


<style>
  #container {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #video {
    margin-bottom: 10px;
    border-radius: 100%;
    max-width: 100%;
    height: auto;
  }

  #btn {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
    margin-top: 10px;
  }

  .button-20 {
    appearance: button;
    background-color: white;
    background-image: linear-gradient(180deg, rgba(255, 255, 255, .15), rgba(255, 255, 255, 0));
    border: 1px solid #4D4AE8;
    border-radius: 1rem;
    box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset, rgba(46, 54, 80, 0.075) 0 1px 1px;
    box-sizing: border-box;
    color: black;
    cursor: pointer;
    display: inline-block;
    font-family: Inter, sans-serif;
    font-size: 1.3rem;
    font-weight: 500;
    line-height: 1.5;
    margin: 0;
    padding: .5rem 1rem;
    text-align: center;
    text-transform: none;
    transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    user-select: none;
    -webkit-user-select: none;
    touch-action: manipulation;
    vertical-align: middle;
    flex: 0 0 auto;
  }

  .button-20:focus:not(:focus-visible),
  .button-20:focus {
    outline: 0;
  }

  .button-20:hover {
    background-color: skyblue;
    border-color: skyblue;
  }

  .button-20:focus {
    background-color: skyblue;
    border-color: skyblue;
    box-shadow: rgba(255, 255, 255, 0.15) 0 1px 0 inset, rgba(46, 54, 80, 0.075) 0 1px 1px, rgba(104, 101, 235, 0.5) 0 0 0 .2rem;
  }

  .button-20:active {
    background-color: skyblue;
    background-image: none;
    border-color: skyblue;
    box-shadow: rgba(46, 54, 80, 0.125) 0 3px 5px inset;
  }

  .button-20:active:focus {
    box-shadow: rgba(46, 54, 80, 0.125) 0 3px 5px inset, rgba(104, 101, 235, 0.5) 0 0 0 .2rem;
  }

  .button-20:disabled {
    background-image: none;
    box-shadow: none;
    opacity: .65;
    pointer-events: none;
  }

  @media (max-width: 768px) {
    #container {
      max-width: 90%;
    }

    .button-20 {
      font-size: 2.5rem;
    }
  }
</style>

<style>
  .calendarBox1 {
    display: inline-block;
  }

  .calendarBox1 label {

    font-weight: bold;
    margin-bottom: 5px;
  }

  .calendarBox1 input[type="date"] {
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 100%;
    box-sizing: border-box;
    font-size: 14px;
  }

  .calendarBox1 input[type="date"]:focus {
    border-color: #007bff;
    outline: none;
  }



  .dropdown {
    position: relative;
    display: inline-block;
  }

  .dropbtn {
    background-color: white;
    /* color: white; */
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.875rem;
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 200px;
    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
    z-index: 1;
  }

  .user-option {
    padding: 10px;
    border-bottom: 1px solid #ddd;
    display: flex;
    flex-direction: column;
  }

  .user-name {
    font-weight: bold;
  }

  .user-email {
    font-size: 0.8em;
    color: #777;
  }

  .dropdown:hover .dropdown-content {
    display: block;
  }
</style>

<script>
  const tableColors = ['table-primary', 'table-success', 'table-danger', 'table-warning', 'table-info'];

  const tableBody = document.getElementById('userTableBody');
  const rows = tableBody.getElementsByTagName('tr');

  for (let i = 0; i < rows.length; i++) {
    const randomColor = tableColors[Math.floor(Math.random() * tableColors.length)];
    rows[i].classList.add(randomColor);
  }
</script>

{{!--
<script>
  function setCurrentMonthAndDate() {
    const currentDate = new Date();
    const year = currentDate.getFullYear();
    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');
    const day = currentDate.getDate().toString().padStart(2, '0');

    const currentDayFormatted = `${year}-${month}-${day}`;

    const firstDayOfCurrentMonth = new Date(year, currentDate.getMonth(), 1);
    const firstDayMonth = (firstDayOfCurrentMonth.getMonth() + 1).toString().padStart(2, '0');

    const currentMonthYear = `${year}-${firstDayMonth}`;

    document.getElementById('startDate').value = currentDayFormatted;
    document.getElementById('endDate').value = currentDayFormatted;
    document.getElementById('calendarInput').value = currentMonthYear;

    filterData1();
  }

  window.onload = setCurrentMonthAndDate;

  document.getElementById('calendarInput').addEventListener('change', function () {
    const selectedDate = new Date(this.value);
    const year = selectedDate.getFullYear();
    const month = (selectedDate.getMonth() + 1).toString().padStart(2, '0');
    const firstDay = new Date(year, selectedDate.getMonth(), 1);
    const firstDayFormatted = `${year}-${month}-01`;
    const lastDay = new Date(year, selectedDate.getMonth() + 1, 0);
    const lastDayFormatted = `${year}-${month}-${lastDay.getDate().toString().padStart(2, '0')}`;

    document.getElementById('startDate').value = firstDayFormatted;
    document.getElementById('endDate').value = lastDayFormatted;
    filterData1();
  });


  function filterData1() {
    const startDateString = document.getElementById('startDate').value;
    const endDateString = document.getElementById('endDate').value;

    const startDate = new Date(startDateString);
    const endDate = new Date(endDateString);

    const rows = document.querySelectorAll('#userTableBody tr');

    rows.forEach(row => {
      const dateCell = row.cells[2].textContent;
      const rowDate = new Date(dateCell);

      if (rowDate >= startDate && rowDate <= endDate) {
        row.style.display = 'table-row';
      } else {
        row.style.display = 'none';
      }
    });
  }

  function filterData() {
    const selectedUserName = document.getElementById('user_name').value;
    const selectedMonthYear = document.getElementById('calendarInput').value;

    const rows = document.querySelectorAll('#userTableBody tr');

    rows.forEach(row => {
      const userName = row.cells[0].textContent;
      const dateCell = row.cells[2].textContent;

      if (
        (selectedUserName === "" || userName === selectedUserName) &&
        (selectedMonthYear === "" || dateCell.startsWith(selectedMonthYear))
      ) {
        row.style.display = 'table-row';
      } else {
        row.style.display = 'none';
      }
    });
  }

  // Modify the event listeners
  document.getElementById('calendarInput').addEventListener('change', filterData);
  document.getElementById('user_name').addEventListener('change', filterData);


  function filterData2() {
    const selectedUserName = document.getElementById('user_name').value;
    const selectedMonthYear = document.getElementById('calendarInput').value;

    const rows = document.querySelectorAll('#userTableBody tr');

    rows.forEach(row => {
      const userName = row.cells[0].textContent;
      const dateCell = row.cells[2].textContent;

      if (
        (selectedUserName === "" || userName === selectedUserName) &&
        (selectedMonthYear === "" || dateCell.startsWith(selectedMonthYear))
      ) {
        row.style.display = 'table-row';
      } else {
        row.style.display = 'none';
      }
    });
  }
</script> --}}

<script>
  document.getElementById('downloadExcel').addEventListener('click', function () {
    const selectedMonthYear = document.getElementById('calendarInput').value;

    const rows = document.querySelectorAll('#userTableBody tr');
    const filteredData = [];

    rows.forEach(row => {
      const dateCell = row.cells[2].textContent;
      if (dateCell.startsWith(selectedMonthYear)) {
        const rowData = Array.from(row.cells).map(cell => cell.textContent);
        rowData.splice(1, 1);
        filteredData.push(rowData);
      }
    });

    const wb = XLSX.utils.book_new();
    const ws = XLSX.utils.aoa_to_sheet([['Name', 'Date', 'In Time', 'Out Time', 'Working Hours', 'Attendance', 'Status'], ...filteredData]);
    XLSX.utils.book_append_sheet(wb, ws, 'Report');

    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });

    const blob = new Blob([excelBuffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

    const fileName = `report_${selectedMonthYear}.xlsx`;
    const downloadLink = document.createElement('a');
    downloadLink.href = URL.createObjectURL(blob);
    downloadLink.download = fileName;
    downloadLink.click();
  });
</script>
<style>
  .flag {
    display: inline-block;
    width: 16px;
    height: 16px;
  }

  .green-flag {
    color: green;
  }

  .red-flag {
    color: red;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Get all the range_status <td> elements
    var rangeStatusCells = document.querySelectorAll('#userTableBody td:nth-child(8)');

    // Loop through each <td> and set the flag class based on range_status
    rangeStatusCells.forEach(function (cell) {
      var rangeStatus = cell.textContent.trim();

      if (rangeStatus === 'ok') {
        cell.querySelector('.flag').classList.add('green-flag');
      } else if (rangeStatus === 'onfield') {
        cell.querySelector('.flag').classList.add('red-flag');
      }
    });
  });
</script>


<script>
  function submitForm() {
    // Get the selected month and year from the input
    const selectedMonthYear = document.getElementById("calendarInput").value;

    // Extract year and month from the selected value
    const selectedYear = selectedMonthYear.substring(0, 4);
    const selectedMonth = selectedMonthYear.substring(5, 7);

    // Set the values in hidden input fields (optional, but can be useful)
    document.getElementById("selectedMonth").value = selectedMonth;
    document.getElementById("selectedYear").value = selectedYear;

    document.getElementById('preloader').style.display = 'flex';
    document.getElementById("dataForm").submit();
  }
</script>


<script>
  function filterData2() {
    // Get the selected user name from the dropdown
    var selectedUser = document.getElementById("user_name").value.toLowerCase();

    // Get all table rows in the tbody
    var rows = document.getElementById("userTableBody").getElementsByTagName("tr");

    // Loop through each row and hide/show based on the selected user
    for (var i = 0; i < rows.length; i++) {
      var userNameCell = rows[i].getElementsByTagName("td")[0]; // Assuming the user_name is in the first column

      if (userNameCell) {
        var userName = userNameCell.textContent || userNameCell.innerText;

        // Check if the selected user is "All Users" or matches the row's user_name
        if (selectedUser === "" || userName.toLowerCase() === selectedUser) {
          rows[i].style.display = ""; // Show the row
        } else {
          rows[i].style.display = "none"; // Hide the row
        }
      }
    }
  }
</script>