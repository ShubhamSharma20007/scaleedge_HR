<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>ScaleEdge</title>
    <link rel="stylesheet" href="assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="assets/vendors/css/vendor.bundle.base.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/sweetalert/dist/sweetalert.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/javascripts/usermanagment.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <link rel="stylesheet" href="assets/css/style.css">
    <link rel="stylesheet" href="assets/css/n.css">
    <link rel="shortcut icon" href="assets/images/favicon.ico" />
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css">

    <!-- Include Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/apexcharts@5.0.0/dist/apexcharts.min.css">

    <style>
        .imagePreview {
            width: 200px;
            height: 200px;
            border: 1px solid #ccc;
            margin-bottom: 20px;
            background-size: cover;
            background-position: center;
            justify-content: center;
        }
    </style>

</head>

<body>
    <div class="container-scroller">
        {{>topbar}}
        <div class="container-fluid page-body-wrapper p-0 " style="margin-top: 70px;">
            {{>attendanceSidebar}}
            <div class="main-panel ">
                <div class="content-wrapper">
                    <div class="page-header">
                        <h3 class="page-title">
                            <span class="page-title-icon bg-gradient-primary text-white me-2">
                                <i class="mdi mdi-home"></i>
                            </span> Attendance
                        </h3>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row justify-content-center">
                                        <div class="col-md-5">
                                            <div class="btn d-flex justify-content-center">
                                                <button id="punch-in" class="btn btn-primary me-3"
                                                    style="display: none; padding:10px !important">Punch In</button>
                                                <button id="punch-out" style="display: none; padding:10px !important"
                                                    class="btn btn-danger me-3">Punch
                                                    Out</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script src="assets/vendors/js/vendor.bundle.base.js"></script>
    <script src="assets/vendors/chart.js/Chart.min.js"></script>
    <script src="assets/js/jquery.cookie.js" type="text/javascript"></script>
    <script src="assets/js/off-canvas.js"></script>
    <script src="assets/js/hoverable-collapse.js"></script>
    <script src="assets/js/misc.js"></script>
    <script src="assets/js/dashboard.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="assets/js/todolist.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

</body>

</html>

<script>
    window.onload = function () {
        fetch('/api/macaddress')
            .then(response => response.json())
            .then(data => {
                const fetchedMACAddress = data.macAddress;
                const storedMACAddress = localStorage.getItem('macAddress');

                if (fetchedMACAddress === storedMACAddress) {
                    console.log('MAC Address matched successfully:', fetchedMACAddress);
                    document.getElementById("punch-in").style.display = "block";
                    document.getElementById("punch-out").style.display = "block";
                } else {
                    console.log('MAC Address not matched');
                    //alert('MAC Address not matched');
                    document.getElementById("punch-in").style.display = "none";
                    document.getElementById("punch-out").style.display = "none";
                }
            })
            .catch(error => {
                console.error('Error fetching MAC address:', error);
            });
    };

    async function punchInOrOut(actionType) {
        try {
            const faceDetailsResponse = await fetch('/getFaceDetails');
            if (!faceDetailsResponse.ok) {
                throw new Error('Error fetching face details');
            }
            const faceDetails = await faceDetailsResponse.json();
            const user_id = faceDetails.id;
            const user_email = faceDetails.user_email;
            const user_name = faceDetails.user_name;
            const latitude = faceDetails.latitude;
            const longitude = faceDetails.longitude;

            navigator.geolocation.getCurrentPosition(async function (position) {
                const currentLat = position.coords.latitude;
                const currentLon = position.coords.longitude;

                const distance = getDistance(currentLat, currentLon, latitude, longitude);

                const range_status = distance <= 0.3 ? "ok" : "onfield";

                const currentDate = new Date().toISOString().slice(0, 10);
                const currentTime = new Date().toLocaleTimeString('en-US', { hour12: false });
                const currentHour = new Date().getHours();

                let attendance_mark;
                if (actionType === "in") {
                    if (currentHour < 10) {
                        attendance_mark = "Present";
                    } else if (currentHour >= 10 && currentHour < 13) {
                        attendance_mark = "Halfday";
                    } else {
                        attendance_mark = "Absent";
                    }
                } else if (actionType === "out") {
                    if (currentHour < 10) {
                        attendance_mark = "Present";
                    } else if (currentHour >= 10 && currentHour < 13) {
                        attendance_mark = "Halfday";
                    } else {
                        attendance_mark = "Absent";
                    }
                }

                if (range_status === "onfield") {
                    const confirmationMessage = actionType === "in" ?
                        '⚠️ Are you sure you want to check-in outside?' :
                        '⚠️ Are you sure you want to check-out outside?';
                    const confirmAction = await Swal.fire({
                        title: confirmationMessage,
                        text: 'You are outside the specified location range. Do you still want to proceed?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: `Yes, ${actionType === "in" ? 'check-in' : 'check-out'}`,
                        cancelButtonText: 'No, cancel',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33'
                    });

                    if (confirmAction.isConfirmed) {
                        const data = {
                            user_id: user_id,
                            A_type: actionType,
                            user_lat: currentLat,
                            user_lon: currentLon,
                            date_column: currentDate,
                            time_column: currentTime,
                            range_status: range_status,
                            user_email: localStorage.loginemail,
                            user_name: user_name,
                            attendance_mark: attendance_mark
                        };

                        const response = await fetch(`/storePunch${actionType === "in" ? "In" : "Out"}Details`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (response.ok) {
                            const successMessage = actionType === "in" ?
                                'Check-in Successful!' :
                                'Check-out Successful!';
                            const greetingMessage = actionType === "in" ?
                                'Welcome!' :
                                'Goodbye!';
                            Swal.fire({
                                icon: 'success',
                                title: successMessage,
                                text: `${greetingMessage} Your ${actionType === "in" ? 'check-in' : 'check-out'} has been successfully recorded`,
                                footer: `${actionType === "in" ? 'Check-in' : 'Check-out'} Time: ${currentTime}`,
                                showConfirmButton: false,
                                timer: 2500,
                            }).then(() => {
                                window.location.href = '/faceMatchMac';
                            });

                        } else {
                            console.error(`Error inserting ${actionType === "in" ? 'check-in' : 'check-out'} attendance:`, response.statusText);
                        }
                    }
                } else {
                    const data = {
                        user_id: user_id,
                        A_type: actionType,
                        user_lat: currentLat,
                        user_lon: currentLon,
                        date_column: currentDate,
                        time_column: currentTime,
                        range_status: range_status,
                        user_email: localStorage.loginemail,
                        user_name: user_name,
                        attendance_mark: attendance_mark
                    };

                    const response = await fetch(`/storePunch${actionType === "in" ? "In" : "Out"}Details`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        const successMessage = actionType === "in" ?
                            'Check-in Successful!' :
                            'Check-out Successful!';
                        Swal.fire({
                            icon: 'success',
                            title: successMessage,
                            text: `Welcome! Your ${actionType === "in" ? 'check-in' : 'check-out'} has been successfully recorded`,
                            footer: `${actionType === "in" ? 'Check-in' : 'Check-out'} Time: ${currentTime}`,
                            showConfirmButton: false,
                            timer: 2500,
                        }).then(() => {
                            window.location.href = '/faceMatchMac';
                        });
                    } else {
                        console.error(`Error inserting ${actionType === "in" ? 'check-in' : 'check-out'} attendance:`, response.statusText);
                    }
                }
            });
        } catch (error) {
            console.error('Error:', error);
        }
    }

    document.getElementById("punch-in").addEventListener("click", function () {
        punchInOrOut("in");
    });

    document.getElementById("punch-out").addEventListener("click", function () {
        punchInOrOut("out");
    });

    function getDistance(lat1, lon1, lat2, lon2) {
        const radlat1 = (Math.PI * lat1) / 180;
        const radlat2 = (Math.PI * lat2) / 180;
        const theta = lon1 - lon2;
        const radtheta = (Math.PI * theta) / 180;
        let dist =
            Math.sin(radlat1) * Math.sin(radlat2) +
            Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);
        dist = Math.acos(dist);
        dist = (dist * 180) / Math.PI;
        dist = dist * 60 * 1.1515 * 1.609344;
        return dist;
    }
</script>

<script src="/assets/js/face-api.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>