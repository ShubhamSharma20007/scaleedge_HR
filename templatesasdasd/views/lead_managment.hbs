<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ScaleEdge</title>
    <link rel="stylesheet" href="stylesheets/usermanagment.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>

<body>
    <div class="container">
        <div class="navigation">
            {{#if sidebar}}
            {{> sidebar}}
            {{else}}
            {{> attendanceSidebar}}
            {{/if}}
        </div>
        <div class="main">
            {{> topbar}}
            <div class="details">
                <div class="recentOrders">
                    <div class="cardHeader">
                        <h2>Lead List</h2>
                        <a href="/leadAdd" class="btn">Add Lead</a>
                    </div>
                    <table id="userDataTable" class="table table-bordered">
                        <thead class="thead-dark">
                            <tr>
                                <!-- <th><input type="checkbox" id="selectAll"></th> -->
                                <th scope="col">Id</th>
                                <th scope="col">Name</th>
                                <th scope="col">Assign</th>
                                <th scope="col">Latitude</th>
                                <th scope="col">Longitude</th>
                                <th scope="col">Status</th>
                                <th scope="col" class="text-end">Action</th>
                            </tr>
                        </thead>

                        <tbody>
                            {{#each data}}
                            <tr>
                                <td>{{id}}</td>
                                <td>{{name}}</td>
                                <td>{{assign}}</td>
                                <td class="latitude-cell">{{latitude}}</td>
                                <td class="longitude-cell">{{longitude}}</td>
                                <td>
                                    {{#ifEquals status "Hot"}}
                                    <span class="status status-red" style="color: red;">{{status}}</span>
                                    {{else ifEquals status "Hold"}}
                                    <span class="status status-blue" style="color: blue;">{{status}}</span>
                                    {{else ifEquals status "Working"}}
                                    <span class="status status-yellow" style="color: forestgreen;">{{status}}</span>
                                    {{else}}
                                    <span class="status">{{status}}</span>
                                    {{/ifEquals}}
                                </td>
                                <td class="text-end">
                                    <a type="button" class="btn btn-light btn-small check-in-btn" data-id="{{id}}"
                                        style="text-decoration: none; color:black;cursor :pointer">
                                        Check in
                                    </a>
                                    <span class="flag-icon flag-green" style="color: green; display: none;"></span>
                                    <span class="flag-icon flag-red" style="display: none;"></span>
                                </td>
                            </tr>
                            {{/each}}
                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="/javascripts/dashboard.js"></script>
    <script src="/javascripts/usermanagment.js"></script>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
</body>

</html>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const checkInButtons = document.querySelectorAll(".check-in-btn");
        checkInButtons.forEach(button => {
            button.addEventListener("click", function () {
                const row = button.closest("tr");
                const latitudeCell = row.querySelector(".latitude-cell");
                const longitudeCell = row.querySelector(".longitude-cell");
                const flagIconGreen = row.querySelector(".flag-icon.flag-green");
                const flagIconRed = row.querySelector(".flag-icon.flag-red");
                const id = button.getAttribute("data-id");

                if ("geolocation" in navigator) {
                    navigator.geolocation.getCurrentPosition(
                        position => {
                            const currentLatitude = position.coords.latitude;
                            const currentLongitude = position.coords.longitude;
                            console.log("Current Latitude:", currentLatitude);
                            console.log("Current Longitude:", currentLongitude);

                            const tableLatitude = parseFloat(latitudeCell.textContent);
                            const tableLongitude = parseFloat(longitudeCell.textContent);

                            const threshold = 0.0001;

                            if (
                                Math.abs(currentLatitude - tableLatitude) <= threshold &&
                                Math.abs(currentLongitude - tableLongitude) <= threshold
                            ) {
                                flagIconGreen.style.display = "inline";
                                flagIconRed.style.display = "none";
                            } else if (
                                Math.abs(tableLongitude - tableLatitude) < 55.0000
                            ) {
                                flagIconGreen.style.display = "inline";
                                flagIconRed.style.display = "none";
                            } else {
                                flagIconGreen.style.display = "none";
                                flagIconRed.style.display = "inline";
                            }

                            const checkinDateTime = new Date();
                            const checkinDate = checkinDateTime.toISOString().slice(0, 10); 
                            const checkinTime = checkinDateTime.toISOString().slice(11, 19); 
                            const flagColor = flagIconGreen.style.display === "inline" ? "green" : "red";

                            const postData = {
                                name: row.querySelector("td:nth-child(2)").textContent,
                                assign: row.querySelector("td:nth-child(3)").textContent,
                                flag: flagColor,
                                status: row.querySelector("td:nth-child(6)").textContent.trim(),
                                latitude: currentLatitude,
                                longitude: currentLongitude
                            };

                            fetch("/post-checkin", {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify(postData)
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Check-in Successful',
                                            text: 'Check-in successfully.',
                                            showConfirmButton: false,
                                            timer: 1500
                                        });
                                    } else {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Check-in Failed',
                                            text: 'Failed to post check-in record.',
                                            showConfirmButton: false,
                                            timer: 1500
                                        });
                                    }
                                })
                                .catch(error => {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Error posting check-in record: ' + error,
                                        showConfirmButton: false,
                                        timer: 1500
                                    });
                                });

                            button.style.display = "inline";
                        },
                        error => {
                            console.error(error.message);
                        }
                    );
                } else {
                    console.error("Geolocation is not available.");
                }
            });
        });
    });
</script>